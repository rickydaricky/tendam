{"ast":null,"code":"var _jsxFileName = \"/Users/heonlee/Desktop/Brown/cs0320/term-project-eyan13-hlee184-mji13-rrajesh-wzhong3/blackjack/src/BlackJack.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { AwesomeButton } from \"react-awesome-button\"; //import AwesomeButtonStyles from \"react-awesome-button/src/styles/styles.scss\";\n\nimport \"react-awesome-button/dist/styles.css\";\nimport TextBox from \"./TextBox\";\nimport GameMessage from \"./GameMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BlackJack(props) {\n  _s();\n\n  const cards = Array.from(Array(52).keys());\n  const [playerScore, setPlayerScore] = useState(0);\n  const [dealerScore, setDealerScore] = useState(0);\n  const [whoWon, setWhoWon] = useState(\"\");\n  const [cardsToDealer, setCardsToDealer] = useState(\"\");\n  const [cardsToPlayer, setCardsToPlayer] = useState(\"\");\n\n  function play() {\n    setUpCards();\n  }\n\n  function setUpCards() {\n    for (let i = 0; i < 4; i++) {\n      let randIndex = Math.floor(Math.random() * cards.length);\n      let chosenCardKey = cards.splice(randIndex, 1); // let chosenCard = \n    }\n  }\n\n  function hit() {\n    //filler obv\n    setPlayerScore(21);\n  }\n\n  function stand() {\n    const player = playerScore;\n    const dealer = dealerScore;\n\n    if (player > dealer) {\n      //display \"you win!\"\n      setWhoWon(\"You Win!\");\n    } else if (player < dealer) {\n      //display \"you lose :(\"\n      setWhoWon(\"You Lose :(\");\n    } else {\n      //display \"it's a tie\"\n      // I think dealer wins if its a tie\n      setWhoWon(\"It's a Tie!\");\n    }\n  }\n  /**\n   * Gets key longitude\n   * @param lon\n   * @param lambda\n   * @returns {JSX.Element}\n   */\n  //function convertKeytoCard(num) {\n  //     return Math.floor(lon / lambda) * lambda;\n  //}\n  // function Button() {\n  //     return <AwesomeButton type=\"primary\"> Button</AwesomeButton>;\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GameMessage, {\n      text: \"Dealer's cards: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameMessage, {\n      text: cardsToDealer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameMessage, {\n      text: \"Player's cards: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameMessage, {\n      text: cardsToPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      size: \"large\",\n      onPress: play,\n      children: \"Play!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      size: \"large\",\n      onPress: hit,\n      children: \"Hit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      size: \"large\",\n      onPress: stand,\n      children: \"Stand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameMessage, {\n      text: whoWon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BlackJack, \"CBbBzbrm/Gf4xnzTlBykEhZKtRw=\");\n\n_c = BlackJack;\nexport default BlackJack;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlackJack\");","map":{"version":3,"sources":["/Users/heonlee/Desktop/Brown/cs0320/term-project-eyan13-hlee184-mji13-rrajesh-wzhong3/blackjack/src/BlackJack.js"],"names":["React","useState","useEffect","useRef","AwesomeButton","TextBox","GameMessage","BlackJack","props","cards","Array","from","keys","playerScore","setPlayerScore","dealerScore","setDealerScore","whoWon","setWhoWon","cardsToDealer","setCardsToDealer","cardsToPlayer","setCardsToPlayer","play","setUpCards","i","randIndex","Math","floor","random","length","chosenCardKey","splice","hit","stand","player","dealer"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { AwesomeButton } from \"react-awesome-button\";\n//import AwesomeButtonStyles from \"react-awesome-button/src/styles/styles.scss\";\nimport \"react-awesome-button/dist/styles.css\";\nimport TextBox from \"./TextBox\";\nimport GameMessage from \"./GameMessage\";\n\nfunction BlackJack(props) {\n    const cards = Array.from(Array(52).keys());\n    const [playerScore, setPlayerScore] = useState(0);\n    const [dealerScore, setDealerScore] = useState(0);\n    const [whoWon, setWhoWon] = useState(\"\");\n\n    const [cardsToDealer, setCardsToDealer] = useState(\"\");\n    const [cardsToPlayer, setCardsToPlayer] = useState(\"\");\n\n    function play() {\n        setUpCards();\n    }\n\n    function setUpCards() {\n        for (let i = 0; i < 4; i++) {\n            let randIndex = Math.floor(Math.random() * cards.length);\n            let chosenCardKey = cards.splice(randIndex, 1);\n            // let chosenCard = \n        }\n    }\n\n\n    function hit() {\n        //filler obv\n\n        setPlayerScore(21);\n    }\n\n    function stand() {\n        const player = playerScore;\n        const dealer = dealerScore;\n        if (player > dealer) {\n            //display \"you win!\"\n            setWhoWon(\"You Win!\");\n        }\n        else if (player < dealer) {\n            //display \"you lose :(\"\n            setWhoWon(\"You Lose :(\");\n        }\n        else {\n            //display \"it's a tie\"\n            // I think dealer wins if its a tie\n            setWhoWon(\"It's a Tie!\");\n        }\n    }\n\n    /**\n     * Gets key longitude\n     * @param lon\n     * @param lambda\n     * @returns {JSX.Element}\n     */\n    //function convertKeytoCard(num) {\n    //     return Math.floor(lon / lambda) * lambda;\n\n    //}\n    // function Button() {\n    //     return <AwesomeButton type=\"primary\"> Button</AwesomeButton>;\n    // }\n    return (\n        <div>\n            <GameMessage text={\"Dealer's cards: \"} />\n            <GameMessage text={cardsToDealer} />\n            <br />\n            <GameMessage text={\"Player's cards: \"} />\n            <GameMessage text={cardsToPlayer} />\n            <br />\n            {/* <TextBox label=\"\" change={testIng} /> */}\n            {/* <AwesomeButton type=\"primary\" onPress={requestStreetRoute}> Manual Street Input Button </AwesomeButton> */}\n            <AwesomeButton type=\"primary\" size=\"large\" onPress={play}>Play!</AwesomeButton>\n            <br />\n            <AwesomeButton\n                type=\"primary\"\n                size=\"large\"\n                onPress={hit}>Hit</AwesomeButton>\n            <br />\n            <AwesomeButton type=\"primary\" size=\"large\" onPress={stand}>Stand</AwesomeButton>\n            <br />\n            <GameMessage text={whoWon} />\n        </div>\n    )\n}\n\n\nexport default BlackJack"]},"metadata":{},"sourceType":"module"}