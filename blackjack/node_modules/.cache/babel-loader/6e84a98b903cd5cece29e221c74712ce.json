{"ast":null,"code":"var _jsxFileName = \"/Users/riarajesh/cs0320/term-project-eyan13-hlee184-mji13-rrajesh-wzhong3/blackjack/src/BlackJack.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect, useRef } from 'react'; //import {AwesomeButton} from \"react-awesome-button\";\n//import AwesomeButtonStyles from \"react-awesome-button/src/styles/styles.scss\";\n//import \"react-awesome-button/dist/styles.css\";\n\nimport TextBox from \"./TextBox\";\nimport GameMessage from \"./GameMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BlackJack(props) {\n  _s();\n\n  const [playerScore, setPlayerScore] = useState(0);\n  const [dealerScore, setDealerScore] = useState(0);\n  const [whoWon, setWhoWon] = useState(\"\");\n\n  function hit() {\n    //filler obv\n    setPlayerScore(21);\n  }\n\n  function stand() {\n    const player = playerScore;\n    const dealer = dealerScore;\n\n    if (player > dealer) {\n      //display \"you win!\"\n      setWhoWon(\"You Win!\");\n    } else if (player < dealer) {\n      //display \"you lose :(\"\n      setWhoWon(\"You Lose :(\");\n    } else {\n      //display \"it's a tie\"\n      setWhoWon(\"It's a Tie!\");\n    }\n  }\n  /**\n   * Gets key longitude\n   * @param lon\n   * @param lambda\n   * @returns {JSX.Element}\n   */\n  //function convertKeytoCard(num) {\n  //     return Math.floor(lon / lambda) * lambda;\n\n\n  const button = styled.button();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Testing hello!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      color: \"#B22222\",\n      onClick: hit,\n      children: \"Hit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onPress: stand,\n      children: \"Stand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameMessage, {\n      text: whoWon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BlackJack, \"aOr4b7hZ20n+yx9jZxBj5mz25LE=\");\n\n_c = BlackJack;\nexport default BlackJack;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlackJack\");","map":{"version":3,"sources":["/Users/riarajesh/cs0320/term-project-eyan13-hlee184-mji13-rrajesh-wzhong3/blackjack/src/BlackJack.js"],"names":["React","useState","useEffect","useRef","TextBox","GameMessage","BlackJack","props","playerScore","setPlayerScore","dealerScore","setDealerScore","whoWon","setWhoWon","hit","stand","player","dealer","button","styled"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD,C,CACA;AACA;AACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASa,GAAT,GAAe;AACX;AACAL,IAAAA,cAAc,CAAC,EAAD,CAAd;AACH;;AAED,WAASM,KAAT,GAAiB;AACb,UAAMC,MAAM,GAAGR,WAAf;AACA,UAAMS,MAAM,GAAGP,WAAf;;AACA,QAAIM,MAAM,GAAGC,MAAb,EAAqB;AACjB;AACAJ,MAAAA,SAAS,CAAC,UAAD,CAAT;AACH,KAHD,MAIK,IAAIG,MAAM,GAAGC,MAAb,EAAqB;AACtB;AACAJ,MAAAA,SAAS,CAAC,aAAD,CAAT;AACH,KAHI,MAIA;AACD;AACAA,MAAAA,SAAS,CAAC,aAAD,CAAT;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;AACA;AACC;AACD;;;AAEI,QAAMK,MAAM,GAAGC,MAAM,CAACD,MAAP,EAAf;AAEA,sBACI;AAAA,8CAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AACI,MAAA,KAAK,EAAC,SADV;AAEI,MAAA,OAAO,EAAEJ,GAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAQ,MAAA,OAAO,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAIH;AAArB;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GArDQN,S;;KAAAA,S;AAwDT,eAAeA,SAAf","sourcesContent":["import './App.css';\nimport React, { useState, useEffect, useRef } from 'react';\n//import {AwesomeButton} from \"react-awesome-button\";\n//import AwesomeButtonStyles from \"react-awesome-button/src/styles/styles.scss\";\n//import \"react-awesome-button/dist/styles.css\";\nimport TextBox from \"./TextBox\";\nimport GameMessage from \"./GameMessage\";\n\nfunction BlackJack(props) {\n    const [playerScore, setPlayerScore] = useState(0);\n    const [dealerScore, setDealerScore] = useState(0);\n    const [whoWon, setWhoWon] = useState(\"\");\n\n    function hit() {\n        //filler obv\n        setPlayerScore(21);\n    }\n\n    function stand() {\n        const player = playerScore;\n        const dealer = dealerScore;\n        if (player > dealer) {\n            //display \"you win!\"\n            setWhoWon(\"You Win!\");\n        }\n        else if (player < dealer) {\n            //display \"you lose :(\"\n            setWhoWon(\"You Lose :(\");\n        }\n        else {\n            //display \"it's a tie\"\n            setWhoWon(\"It's a Tie!\");\n        }\n    }\n\n    /**\n     * Gets key longitude\n     * @param lon\n     * @param lambda\n     * @returns {JSX.Element}\n     */\n //function convertKeytoCard(num) {\n//     return Math.floor(lon / lambda) * lambda;\n\n    const button = styled.button()\n\n    return (\n        <div>\n            Testing hello!\n            <br/>\n            {/* <TextBox label=\"\" change={testIng} /> */}\n            {/* <AwesomeButton type=\"primary\" onPress={requestStreetRoute}> Manual Street Input Button </AwesomeButton> */}\n            <button\n                color=\"#B22222\"\n                onClick={hit}>Hit</button>\n            <br/>\n            <button onPress={stand}>Stand</button>\n            <br/>\n            <GameMessage text = {whoWon}/>\n        </div>\n    )\n}\n\n\nexport default BlackJack"]},"metadata":{},"sourceType":"module"}