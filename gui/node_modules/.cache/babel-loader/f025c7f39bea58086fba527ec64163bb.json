{"ast":null,"code":"var _jsxFileName = \"/Users/riarajesh/cs0320/term-project-eyan13-hlee184-mji13-rrajesh-wzhong3/gui/src/service/Form/createForm.js\";\nimport React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'; // formItems contains the key to the initialValues\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction formatForm(formItems, initialValues, setFormValue) {\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValue({ ...initialValues,\n      [name]: value\n    });\n  };\n\n  function toTextBox(props, index) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        className: props.className,\n        name: props.key,\n        label: props.label,\n        value: initialValues[props.key],\n        onChange: handleChange\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n\n  function toEncryptedBox(props, index) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        type: \"password\",\n        className: props.className,\n        name: props.key,\n        label: props.label,\n        value: initialValues[props.key],\n        onChange: handleChange\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n  const convertDict = {\n    'text': toTextBox,\n    'password': toEncryptedBox\n  };\n  return formItems.map((item, index) => {\n    let type = item['type'];\n    let result = convertDict[type](item, index);\n    return result;\n  });\n}\n\nexport default formatForm;","map":{"version":3,"sources":["/Users/riarajesh/cs0320/term-project-eyan13-hlee184-mji13-rrajesh-wzhong3/gui/src/service/Form/createForm.js"],"names":["React","TextField","makeStyles","formatForm","formItems","initialValues","setFormValue","handleChange","e","name","value","target","toTextBox","props","index","className","key","label","toEncryptedBox","convertDict","map","item","type","result"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CAEA;;;;AACA,SAASC,UAAT,CAAoBC,SAApB,EAA+BC,aAA/B,EAA8CC,YAA9C,EAA4D;AAExD,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAL,IAAAA,YAAY,CAAC,EACT,GAAGD,aADM;AAET,OAACI,IAAD,GAAQC;AAFC,KAAD,CAAZ;AAIH,GAND;;AAQA,WAASE,SAAT,CAAmBC,KAAnB,EAA0BC,KAA1B,EAAiC;AAC7B,wBACI;AAAA,6BACA,QAAC,SAAD;AACI,QAAA,OAAO,EAAC,UADZ;AAEI,QAAA,SAAS,EAAED,KAAK,CAACE,SAFrB;AAGI,QAAA,IAAI,EAAEF,KAAK,CAACG,GAHhB;AAII,QAAA,KAAK,EAAEH,KAAK,CAACI,KAJjB;AAKI,QAAA,KAAK,EAAEZ,aAAa,CAACQ,KAAK,CAACG,GAAP,CALxB;AAMI,QAAA,QAAQ,EAAET;AANd,SAOSO,KAPT;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAAA;;AAED,WAASI,cAAT,CAAwBL,KAAxB,EAA+BC,KAA/B,EAAsC;AAClC,wBACI;AAAA,6BACA,QAAC,SAAD;AACI,QAAA,OAAO,EAAC,UADZ;AAEI,QAAA,IAAI,EAAE,UAFV;AAGI,QAAA,SAAS,EAAED,KAAK,CAACE,SAHrB;AAII,QAAA,IAAI,EAAEF,KAAK,CAACG,GAJhB;AAKI,QAAA,KAAK,EAAEH,KAAK,CAACI,KALjB;AAMI,QAAA,KAAK,EAAEZ,aAAa,CAACQ,KAAK,CAACG,GAAP,CANxB;AAOI,QAAA,QAAQ,EAAET;AAPd,SAQSO,KART;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAAA;AAED,QAAMK,WAAW,GAAG;AAChB,YAAQP,SADQ;AAEhB,gBAAYM;AAFI,GAApB;AAKA,SACId,SAAS,CAACgB,GAAV,CAAc,CAACC,IAAD,EAAOP,KAAP,KAAiB;AAC3B,QAAIQ,IAAI,GAAGD,IAAI,CAAC,MAAD,CAAf;AACA,QAAIE,MAAM,GAAGJ,WAAW,CAACG,IAAD,CAAX,CAAkBD,IAAlB,EAAwBP,KAAxB,CAAb;AACA,WAAOS,MAAP;AACH,GAJD,CADJ;AAOH;;AAED,eAAepB,UAAf","sourcesContent":["import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// formItems contains the key to the initialValues\nfunction formatForm(formItems, initialValues, setFormValue) {\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormValue({\n            ...initialValues,\n            [name]: value\n        });\n    }\n\n    function toTextBox(props, index) {\n        return (\n            <div>\n            <TextField\n                variant=\"outlined\"\n                className={props.className}\n                name={props.key}\n                label={props.label}\n                value={initialValues[props.key]}\n                onChange={handleChange}\n                key={index}\n            />\n            </div>\n        );\n    };\n\n    function toEncryptedBox(props, index) {\n        return (\n            <div>\n            <TextField\n                variant=\"outlined\"\n                type={\"password\"}\n                className={props.className}\n                name={props.key}\n                label={props.label}\n                value={initialValues[props.key]}\n                onChange={handleChange}\n                key={index}\n            />\n            </div>\n        );\n    };\n\n    const convertDict = {\n        'text': toTextBox,\n        'password': toEncryptedBox\n    };\n\n    return (\n        formItems.map((item, index) => {\n            let type = item['type'];\n            let result = convertDict[type](item, index);\n            return(result);\n        })\n    )\n}\n\nexport default formatForm;"]},"metadata":{},"sourceType":"module"}